name: Build and Deploy React+Express App

# This workflow runs on any push to the 'main' branch
on:
  push:
    branches: [ "main" ]

env:
  # IMPORTANT: Update these with the unique names from your main.tf file
  ACR_NAME: "hallticketviewercontainer289"
  FRONTEND_APP_NAME: "hallticket-frontend-app-123"
  BACKEND_APP_NAME: "hallticket-backend-app-123"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: 'Checkout Code'
      uses: actions/checkout@v3

    # This step logs into your Azure account using the secret you will create
    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # This step logs into your private container registry (ACR)
    - name: 'ACR Login'
      run: az acr login --name ${{ env.ACR_NAME }}

    # This step builds the React frontend Docker image and pushes it to ACR
    - name: 'Build and Push Frontend'
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/frontend:${{ github.sha }} ./frontend
        docker push ${{ env.ACR_NAME }}.azurecr.io/frontend:${{ github.sha }}

    # This step builds the Express backend Docker image and pushes it to ACR
    - name: 'Build and Push Backend'
      run: |
        docker build -t ${{ env.ACR_NAME }}.azurecr.io/backend:${{ github.sha }} ./backend
        docker push ${{ env.ACR_NAME }}.azurecr.io/backend:${{ github.sha }}

  deploy:
    runs-on: ubuntu-latest
    # The 'deploy' job will only run after the 'build-and-push' job succeeds
    needs: build-and-push
    steps:
    - name: 'Azure Login'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # This step deploys the frontend container to your Azure App Service
    - name: 'Deploy Frontend to App Service'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.FRONTEND_APP_NAME }}
        images: '${{ env.ACR_NAME }}.azurecr.io/frontend:${{ github.sha }}'

    # This step deploys the backend container to your Azure App Service
    - name: 'Deploy Backend to App Service'
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.BACKEND_APP_NAME }}
        images: '${{ env.ACR_NAME }}.azurecr.io/backend:${{ github.sha }}'